@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.DelegacionAdvanceSearchModel
@{
    List<SelectListItem> varRegion_Zona = null;
    if (ViewBag.Regions_Zona != null)
    { varRegion_Zona = (List<SelectListItem>)ViewBag.Regions_Zona; }
    List<SelectListItem> varDistrito_Judicial_Distrito = null;
    if (ViewBag.Distrito_Judicials_Distrito != null)
    { varDistrito_Judicial_Distrito = (List<SelectListItem>)ViewBag.Distrito_Judicials_Distrito; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Delegacion", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.DelegacionResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.DelegacionResources.Descripcion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DescripcionFilter, filters, new { @class = "form-control", @id = "ddlDescripcionFilter" })
                    @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control", @type = "text", @id = "txtDescripcion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.DelegacionResources.Zona</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ZonaFilter, filters, new { @class = "form-control", @id = "ddlZonaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceZona, new { @class = "form-control", @type = "text", @id = "txtAdvanceZona" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varRegion_Zona!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceZonaMultiple, varRegion_Zona,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceZona"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.DelegacionResources.Clave_Expediente</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave_Expediente, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave_Expediente" })
                    @Html.ValidationMessageFor(m => m.FromClave_Expediente)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave_Expediente, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave_Expediente", @data_min = "txtAdvanceFromClave_Expediente" })
                    @Html.ValidationMessageFor(m => m.ToClave_Expediente)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.DelegacionResources.Direccion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DireccionFilter, filters, new { @class = "form-control", @id = "ddlDireccionFilter" })
                    @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control", @type = "text", @id = "txtDireccion" })
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.DelegacionResources.Consecutivo_MPO</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromConsecutivo_MPO, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromConsecutivo_MPO" })
                    @Html.ValidationMessageFor(m => m.FromConsecutivo_MPO)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToConsecutivo_MPO, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToConsecutivo_MPO", @data_min = "txtAdvanceFromConsecutivo_MPO" })
                    @Html.ValidationMessageFor(m => m.ToConsecutivo_MPO)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.DelegacionResources.Consecutivo_MPI</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromConsecutivo_MPI, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromConsecutivo_MPI" })
                    @Html.ValidationMessageFor(m => m.FromConsecutivo_MPI)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToConsecutivo_MPI, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToConsecutivo_MPI", @data_min = "txtAdvanceFromConsecutivo_MPI" })
                    @Html.ValidationMessageFor(m => m.ToConsecutivo_MPI)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.DelegacionResources.Distrito</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DistritoFilter, filters, new { @class = "form-control", @id = "ddlDistritoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceDistrito, new { @class = "form-control", @type = "text", @id = "txtAdvanceDistrito" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varDistrito_Judicial_Distrito!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceDistritoMultiple, varDistrito_Judicial_Distrito,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceDistrito"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.DelegacionResources.Abreviacion_Delegacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Abreviacion_DelegacionFilter, filters, new { @class = "form-control", @id = "ddlAbreviacion_DelegacionFilter" })
                    @Html.TextBoxFor(m => m.Abreviacion_Delegacion, new { @class = "form-control", @type = "text", @id = "txtAbreviacion_Delegacion" })
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Delegacion/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.DelegacionClaveTo = $("#txtAdvanceToClave").val();
        }
        if ($("#txtAdvanceDescripcion").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionDescripcion = $("#txtAdvanceDescripcion").val();
            advanceSearch.DelegacionDescripcionSearchType = $("#ddlAdvanceDescripcionFilter").val();
        }
        advanceSearch.ZonaSearchType = 0;
        if ($('#ddlAdvanceZona').val().length > 0 || $("#txtAdvanceZona").val() == "") {


            if (isDelegacionTextSearch) {
                advanceSearch.ZonaName = $("#txtAdvanceZona").val();
                advanceSearch.ZonaNameSearchType = $("#ddlAdvanceZona").val();
                advanceSearch.ZonaSearchType = 1;
            }
            else {

                advanceSearch.ZonaToSearch = $("#ddlAdvanceZona").val();
                advanceSearch.ZonaSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromClave_Expediente").val() != "" || $("#txtAdvanceToClave_Expediente").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionClave_ExpedienteFrom = $("#txtAdvanceFromClave_Expediente").val();
            advanceSearch.DelegacionClave_ExpedienteTo = $("#txtAdvanceToClave_Expediente").val();
        }
        if ($("#txtAdvanceDireccion").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionDireccion = $("#txtAdvanceDireccion").val();
            advanceSearch.DelegacionDireccionSearchType = $("#ddlAdvanceDireccionFilter").val();
        }
        if ($("#txtAdvanceFromConsecutivo_MPO").val() != "" || $("#txtAdvanceToConsecutivo_MPO").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionConsecutivo_MPOFrom = $("#txtAdvanceFromConsecutivo_MPO").val();
            advanceSearch.DelegacionConsecutivo_MPOTo = $("#txtAdvanceToConsecutivo_MPO").val();
        }
        if ($("#txtAdvanceFromConsecutivo_MPI").val() != "" || $("#txtAdvanceToConsecutivo_MPI").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionConsecutivo_MPIFrom = $("#txtAdvanceFromConsecutivo_MPI").val();
            advanceSearch.DelegacionConsecutivo_MPITo = $("#txtAdvanceToConsecutivo_MPI").val();
        }
        advanceSearch.DistritoSearchType = 0;
        if ($('#ddlAdvanceDistrito').val().length > 0 || $("#txtAdvanceDistrito").val() == "") {


            if (isDelegacionTextSearch) {
                advanceSearch.DistritoName = $("#txtAdvanceDistrito").val();
                advanceSearch.DistritoNameSearchType = $("#ddlAdvanceDistrito").val();
                advanceSearch.DistritoSearchType = 1;
            }
            else {

                advanceSearch.DistritoToSearch = $("#ddlAdvanceDistrito").val();
                advanceSearch.DistritoSearchType = 2;
            }
        }
        if ($("#txtAdvanceAbreviacion_Delegacion").val() != "") {
            hasParameter = true;
            advanceSearch.DelegacionAbreviacion_Delegacion = $("#txtAdvanceAbreviacion_Delegacion").val();
            advanceSearch.DelegacionAbreviacion_DelegacionSearchType = $("#ddlAdvanceAbreviacion_DelegacionFilter").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblDelegacion').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isDelegacionTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceZona").keypress(function () {
            isDelegacionTextSearch = true;
            $("#ddlAdvanceZona").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceZona").change(function () {
            isDelegacionTextSearch = false;
            $("#txtAdvanceZona").val('');
        });
        $("#txtAdvanceDistrito").keypress(function () {
            isDelegacionTextSearch = true;
            $("#ddlAdvanceDistrito").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceDistrito").change(function () {
            isDelegacionTextSearch = false;
            $("#txtAdvanceDistrito").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

