@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Detalle_Aseguramiento_de_Pistas_de_AterrizajeAdvanceSearchModel
@{
    List<SelectListItem> varMotivo_de_Registro_Motivo_de_Registro = null;
    if (ViewBag.Motivo_de_Registros_Motivo_de_Registro != null)
    { varMotivo_de_Registro_Motivo_de_Registro = (List<SelectListItem>)ViewBag.Motivo_de_Registros_Motivo_de_Registro; }
    List<SelectListItem> varTipo_de_Pista_de_Aterrizaje_Tipo = null;
    if (ViewBag.Tipo_de_Pista_de_Aterrizajes_Tipo != null)
    { varTipo_de_Pista_de_Aterrizaje_Tipo = (List<SelectListItem>)ViewBag.Tipo_de_Pista_de_Aterrizajes_Tipo; }
    List<SelectListItem> varTipo_de_Orientacion_Orientacion_de = null;
    if (ViewBag.Tipo_de_Orientacions_Orientacion_de != null)
    { varTipo_de_Orientacion_Orientacion_de = (List<SelectListItem>)ViewBag.Tipo_de_Orientacions_Orientacion_de; }
    List<SelectListItem> varTipo_de_Orientacion_Orientacion = null;
    if (ViewBag.Tipo_de_Orientacions_Orientacion != null)
    { varTipo_de_Orientacion_Orientacion = (List<SelectListItem>)ViewBag.Tipo_de_Orientacions_Orientacion; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Detalle_Aseguramiento_de_Pistas_de_Aterrizaje", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Motivo_de_Registro</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Motivo_de_RegistroFilter, filters, new { @class = "form-control", @id = "ddlMotivo_de_RegistroFilter" })
                    @Html.TextBoxFor(m => m.AdvanceMotivo_de_Registro, new { @class = "form-control", @type = "text", @id = "txtAdvanceMotivo_de_Registro" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varMotivo_de_Registro_Motivo_de_Registro!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceMotivo_de_RegistroMultiple, varMotivo_de_Registro_Motivo_de_Registro,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceMotivo_de_Registro"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Tipo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.TipoFilter, filters, new { @class = "form-control", @id = "ddlTipoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceTipo, new { @class = "form-control", @type = "text", @id = "txtAdvanceTipo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Pista_de_Aterrizaje_Tipo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceTipoMultiple, varTipo_de_Pista_de_Aterrizaje_Tipo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceTipo"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Suelo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.SueloFilter, filters, new { @class = "form-control", @id = "ddlSueloFilter" })
                    @Html.TextBoxFor(m => m.Suelo, new { @class = "form-control", @type = "text", @id = "txtSuelo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Descripcion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DescripcionFilter, filters, new { @class = "form-control", @id = "ddlDescripcionFilter" })
                    @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control", @type = "text", @id = "txtDescripcion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Localizacion_1</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Localizacion_1Filter, filters, new { @class = "form-control", @id = "ddlLocalizacion_1Filter" })
                    @Html.TextBoxFor(m => m.Localizacion_1, new { @class = "form-control", @type = "text", @id = "txtLocalizacion_1" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Latitud</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.LatitudFilter, filters, new { @class = "form-control", @id = "ddlLatitudFilter" })
                    @Html.TextBoxFor(m => m.Latitud, new { @class = "form-control", @type = "text", @id = "txtLatitud" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Longitud</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.LongitudFilter, filters, new { @class = "form-control", @id = "ddlLongitudFilter" })
                    @Html.TextBoxFor(m => m.Longitud, new { @class = "form-control", @type = "text", @id = "txtLongitud" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Orientacion_de</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Orientacion_deFilter, filters, new { @class = "form-control", @id = "ddlOrientacion_deFilter" })
                    @Html.TextBoxFor(m => m.AdvanceOrientacion_de, new { @class = "form-control", @type = "text", @id = "txtAdvanceOrientacion_de" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Orientacion_Orientacion_de!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceOrientacion_deMultiple, varTipo_de_Orientacion_Orientacion_de,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceOrientacion_de"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Orientacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.OrientacionFilter, filters, new { @class = "form-control", @id = "ddlOrientacionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceOrientacion, new { @class = "form-control", @type = "text", @id = "txtAdvanceOrientacion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Orientacion_Orientacion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceOrientacionMultiple, varTipo_de_Orientacion_Orientacion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceOrientacion"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Largo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromLargo, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceFromLargo" })
                    @Html.ValidationMessageFor(m => m.FromLargo)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToLargo, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceToLargo", @data_min = "txtAdvanceFromLargo" })
                    @Html.ValidationMessageFor(m => m.ToLargo)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Aseguramiento_de_Pistas_de_AterrizajeResources.Ancho</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromAncho, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceFromAncho" })
                    @Html.ValidationMessageFor(m => m.FromAncho)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToAncho, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceToAncho", @data_min = "txtAdvanceFromAncho" })
                    @Html.ValidationMessageFor(m => m.ToAncho)
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Detalle_Aseguramiento_de_Pistas_de_Aterrizaje/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeClaveTo = $("#txtAdvanceToClave").val();
        }
        advanceSearch.Motivo_de_RegistroSearchType = 0;
        if ($('#ddlAdvanceMotivo_de_Registro').val().length > 0 || $("#txtAdvanceMotivo_de_Registro").val() == "") {


            if (isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch) {
                advanceSearch.Motivo_de_RegistroName = $("#txtAdvanceMotivo_de_Registro").val();
                advanceSearch.Motivo_de_RegistroNameSearchType = $("#ddlAdvanceMotivo_de_Registro").val();
                advanceSearch.Motivo_de_RegistroSearchType = 1;
            }
            else {

                advanceSearch.Motivo_de_RegistroToSearch = $("#ddlAdvanceMotivo_de_Registro").val();
                advanceSearch.Motivo_de_RegistroSearchType = 2;
            }
        }
        advanceSearch.TipoSearchType = 0;
        if ($('#ddlAdvanceTipo').val().length > 0 || $("#txtAdvanceTipo").val() == "") {


            if (isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch) {
                advanceSearch.TipoName = $("#txtAdvanceTipo").val();
                advanceSearch.TipoNameSearchType = $("#ddlAdvanceTipo").val();
                advanceSearch.TipoSearchType = 1;
            }
            else {

                advanceSearch.TipoToSearch = $("#ddlAdvanceTipo").val();
                advanceSearch.TipoSearchType = 2;
            }
        }
        if ($("#txtAdvanceSuelo").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeSuelo = $("#txtAdvanceSuelo").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeSueloSearchType = $("#ddlAdvanceSueloFilter").val();
        }
        if ($("#txtAdvanceDescripcion").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeDescripcion = $("#txtAdvanceDescripcion").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeDescripcionSearchType = $("#ddlAdvanceDescripcionFilter").val();
        }
        if ($("#txtAdvanceLocalizacion_1").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLocalizacion_1 = $("#txtAdvanceLocalizacion_1").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLocalizacion_1SearchType = $("#ddlAdvanceLocalizacion_1Filter").val();
        }
        if ($("#txtAdvanceLatitud").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLatitud = $("#txtAdvanceLatitud").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLatitudSearchType = $("#ddlAdvanceLatitudFilter").val();
        }
        if ($("#txtAdvanceLongitud").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLongitud = $("#txtAdvanceLongitud").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLongitudSearchType = $("#ddlAdvanceLongitudFilter").val();
        }
        advanceSearch.Orientacion_deSearchType = 0;
        if ($('#ddlAdvanceOrientacion_de').val().length > 0 || $("#txtAdvanceOrientacion_de").val() == "") {


            if (isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch) {
                advanceSearch.Orientacion_deName = $("#txtAdvanceOrientacion_de").val();
                advanceSearch.Orientacion_deNameSearchType = $("#ddlAdvanceOrientacion_de").val();
                advanceSearch.Orientacion_deSearchType = 1;
            }
            else {

                advanceSearch.Orientacion_deToSearch = $("#ddlAdvanceOrientacion_de").val();
                advanceSearch.Orientacion_deSearchType = 2;
            }
        }
        advanceSearch.OrientacionSearchType = 0;
        if ($('#ddlAdvanceOrientacion').val().length > 0 || $("#txtAdvanceOrientacion").val() == "") {


            if (isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch) {
                advanceSearch.OrientacionName = $("#txtAdvanceOrientacion").val();
                advanceSearch.OrientacionNameSearchType = $("#ddlAdvanceOrientacion").val();
                advanceSearch.OrientacionSearchType = 1;
            }
            else {

                advanceSearch.OrientacionToSearch = $("#ddlAdvanceOrientacion").val();
                advanceSearch.OrientacionSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromLargo").val() != "" || $("#txtAdvanceToLargo").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLargoFrom = $("#txtAdvanceFromLargo").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeLargoTo = $("#txtAdvanceToLargo").val();
        }
        if ($("#txtAdvanceFromAncho").val() != "" || $("#txtAdvanceToAncho").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeAnchoFrom = $("#txtAdvanceFromAncho").val();
            advanceSearch.Detalle_Aseguramiento_de_Pistas_de_AterrizajeAnchoTo = $("#txtAdvanceToAncho").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblDetalle_Aseguramiento_de_Pistas_de_Aterrizaje').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceMotivo_de_Registro").keypress(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = true;
            $("#ddlAdvanceMotivo_de_Registro").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceMotivo_de_Registro").change(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = false;
            $("#txtAdvanceMotivo_de_Registro").val('');
        });
        $("#txtAdvanceTipo").keypress(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = true;
            $("#ddlAdvanceTipo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTipo").change(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = false;
            $("#txtAdvanceTipo").val('');
        });
        $("#txtAdvanceOrientacion_de").keypress(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = true;
            $("#ddlAdvanceOrientacion_de").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceOrientacion_de").change(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = false;
            $("#txtAdvanceOrientacion_de").val('');
        });
        $("#txtAdvanceOrientacion").keypress(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = true;
            $("#ddlAdvanceOrientacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceOrientacion").change(function () {
            isDetalle_Aseguramiento_de_Pistas_de_AterrizajeTextSearch = false;
            $("#txtAdvanceOrientacion").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

