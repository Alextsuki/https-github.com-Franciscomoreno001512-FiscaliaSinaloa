@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Detalle_de_Persona_MoralAdvanceSearchModel
@{
 List<SelectListItem> varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = null;
    if (ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial != null)
    { varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = (List<SelectListItem>)ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial; }
 List<SelectListItem> varexpediente_ministerio_publico_Expediente_MP = null;
    if (ViewBag.expediente_ministerio_publicos_Expediente_MP != null)
    { varexpediente_ministerio_publico_Expediente_MP = (List<SelectListItem>)ViewBag.expediente_ministerio_publicos_Expediente_MP; }
 List<SelectListItem> varPais_Pais = null;
    if (ViewBag.Paiss_Pais != null)
    { varPais_Pais = (List<SelectListItem>)ViewBag.Paiss_Pais; }
 List<SelectListItem> varEstado_Estado = null;
    if (ViewBag.Estados_Estado != null)
    { varEstado_Estado = (List<SelectListItem>)ViewBag.Estados_Estado; }
 List<SelectListItem> varMunicipio_Municipio = null;
    if (ViewBag.Municipios_Municipio != null)
    { varMunicipio_Municipio = (List<SelectListItem>)ViewBag.Municipios_Municipio; }
 List<SelectListItem> varColonia_Poblacion = null;
    if (ViewBag.Colonias_Poblacion != null)
    { varColonia_Poblacion = (List<SelectListItem>)ViewBag.Colonias_Poblacion; }
    List<SelectListItem> varLocalidad_Localidad = null;
    if (ViewBag.Localidads_Localidad != null)
    { varLocalidad_Localidad = (List<SelectListItem>)ViewBag.Localidads_Localidad; }
 List<SelectListItem> varColonia_Colonia = null;
    if (ViewBag.Colonias_Colonia != null)
    { varColonia_Colonia = (List<SelectListItem>)ViewBag.Colonias_Colonia; }
    List<SelectListItem> varGenero_Sexo = null;
    if (ViewBag.Generos_Sexo != null)
    { varGenero_Sexo = (List<SelectListItem>)ViewBag.Generos_Sexo; }
    List<SelectListItem> varNacionalidad_Nacionalidad = null;
    if (ViewBag.Nacionalidads_Nacionalidad != null)
    { varNacionalidad_Nacionalidad = (List<SelectListItem>)ViewBag.Nacionalidads_Nacionalidad; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Detalle_de_Persona_Moral", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
 List<SelectListItem> varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = null;
    if (ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial != null)
    { varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = (List<SelectListItem>)ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial; }
 List<SelectListItem> varexpediente_ministerio_publico_Expediente_MP = null;
    if (ViewBag.expediente_ministerio_publicos_Expediente_MP != null)
    { varexpediente_ministerio_publico_Expediente_MP = (List<SelectListItem>)ViewBag.expediente_ministerio_publicos_Expediente_MP; }
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Nombre</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NombreFilter, filters, new { @class = "form-control", @id = "ddlNombreFilter" })
                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @type = "text", @id = "txtNombre" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Apellido_Paterno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_PaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_PaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Paterno, new { @class = "form-control", @type = "text", @id = "txtApellido_Paterno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Apellido_Materno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_MaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_MaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Materno, new { @class = "form-control", @type = "text", @id = "txtApellido_Materno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Nombre_Completo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_CompletoFilter, filters, new { @class = "form-control", @id = "ddlNombre_CompletoFilter" })
                    @Html.TextBoxFor(m => m.Nombre_Completo, new { @class = "form-control", @type = "text", @id = "txtNombre_Completo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Calidad_Juridica</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Calidad_JuridicaFilter, filters, new { @class = "form-control", @id = "ddlCalidad_JuridicaFilter" })
                    @Html.TextBoxFor(m => m.Calidad_Juridica, new { @class = "form-control", @type = "text", @id = "txtCalidad_Juridica" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Razon_Social</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Razon_SocialFilter, filters, new { @class = "form-control", @id = "ddlRazon_SocialFilter" })
                    @Html.TextBoxFor(m => m.Razon_Social, new { @class = "form-control", @type = "text", @id = "txtRazon_Social" })
                </div>
 List<SelectListItem> varPais_Pais = null;
    if (ViewBag.Paiss_Pais != null)
    { varPais_Pais = (List<SelectListItem>)ViewBag.Paiss_Pais; }
 List<SelectListItem> varEstado_Estado = null;
    if (ViewBag.Estados_Estado != null)
    { varEstado_Estado = (List<SelectListItem>)ViewBag.Estados_Estado; }
 List<SelectListItem> varMunicipio_Municipio = null;
    if (ViewBag.Municipios_Municipio != null)
    { varMunicipio_Municipio = (List<SelectListItem>)ViewBag.Municipios_Municipio; }
 List<SelectListItem> varColonia_Poblacion = null;
    if (ViewBag.Colonias_Poblacion != null)
    { varColonia_Poblacion = (List<SelectListItem>)ViewBag.Colonias_Poblacion; }
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Localidad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.LocalidadFilter, filters, new { @class = "form-control", @id = "ddlLocalidadFilter" })
                    @Html.TextBoxFor(m => m.AdvanceLocalidad, new { @class = "form-control", @type = "text", @id = "txtAdvanceLocalidad" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varLocalidad_Localidad!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceLocalidadMultiple, varLocalidad_Localidad,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceLocalidad"
                        });
                    }
                </div>
 List<SelectListItem> varColonia_Colonia = null;
    if (ViewBag.Colonias_Colonia != null)
    { varColonia_Colonia = (List<SelectListItem>)ViewBag.Colonias_Colonia; }
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Calle</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.CalleFilter, filters, new { @class = "form-control", @id = "ddlCalleFilter" })
                    @Html.TextBoxFor(m => m.Calle, new { @class = "form-control", @type = "text", @id = "txtCalle" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Numero_Exterior</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_ExteriorFilter, filters, new { @class = "form-control", @id = "ddlNumero_ExteriorFilter" })
                    @Html.TextBoxFor(m => m.Numero_Exterior, new { @class = "form-control", @type = "text", @id = "txtNumero_Exterior" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Numero_Interior</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_InteriorFilter, filters, new { @class = "form-control", @id = "ddlNumero_InteriorFilter" })
                    @Html.TextBoxFor(m => m.Numero_Interior, new { @class = "form-control", @type = "text", @id = "txtNumero_Interior" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Referencia</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ReferenciaFilter, filters, new { @class = "form-control", @id = "ddlReferenciaFilter" })
                    @Html.TextBoxFor(m => m.Referencia, new { @class = "form-control", @type = "text", @id = "txtReferencia" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Latitud</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.LatitudFilter, filters, new { @class = "form-control", @id = "ddlLatitudFilter" })
                    @Html.TextBoxFor(m => m.Latitud, new { @class = "form-control", @type = "text", @id = "txtLatitud" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Longitud</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.LongitudFilter, filters, new { @class = "form-control", @id = "ddlLongitudFilter" })
                    @Html.TextBoxFor(m => m.Longitud, new { @class = "form-control", @type = "text", @id = "txtLongitud" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Telefono</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.TelefonoFilter, filters, new { @class = "form-control", @id = "ddlTelefonoFilter" })
                    @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", @type = "text", @id = "txtTelefono" })
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Extension</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromExtension, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromExtension" })
                    @Html.ValidationMessageFor(m => m.FromExtension)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToExtension, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToExtension", @data_min = "txtAdvanceFromExtension" })
                    @Html.ValidationMessageFor(m => m.ToExtension)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Celular</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.CelularFilter, filters, new { @class = "form-control", @id = "ddlCelularFilter" })
                    @Html.TextBoxFor(m => m.Celular, new { @class = "form-control", @type = "text", @id = "txtCelular" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Correo_Electronico</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Correo_ElectronicoFilter, filters, new { @class = "form-control", @id = "ddlCorreo_ElectronicoFilter" })
                    @Html.TextBoxFor(m => m.Correo_Electronico, new { @class = "form-control", @type = "text", @id = "txtCorreo_Electronico" })
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Codigo_Postal</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromCodigo_Postal, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromCodigo_Postal" })
                    @Html.ValidationMessageFor(m => m.FromCodigo_Postal)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToCodigo_Postal, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToCodigo_Postal", @data_min = "txtAdvanceFromCodigo_Postal" })
                    @Html.ValidationMessageFor(m => m.ToCodigo_Postal)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.RFC</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.RFCFilter, filters, new { @class = "form-control", @id = "ddlRFCFilter" })
                    @Html.TextBoxFor(m => m.RFC, new { @class = "form-control", @type = "text", @id = "txtRFC" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.CURP</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.CURPFilter, filters, new { @class = "form-control", @id = "ddlCURPFilter" })
                    @Html.TextBoxFor(m => m.CURP, new { @class = "form-control", @type = "text", @id = "txtCURP" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.ID_Estado_Institucion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ID_Estado_InstitucionFilter, filters, new { @class = "form-control", @id = "ddlID_Estado_InstitucionFilter" })
                    @Html.TextBoxFor(m => m.ID_Estado_Institucion, new { @class = "form-control", @type = "text", @id = "txtID_Estado_Institucion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Nombres</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NombresFilter, filters, new { @class = "form-control", @id = "ddlNombresFilter" })
                    @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control", @type = "text", @id = "txtNombres" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Apellido_Paterno2</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_Paterno2Filter, filters, new { @class = "form-control", @id = "ddlApellido_Paterno2Filter" })
                    @Html.TextBoxFor(m => m.Apellido_Paterno2, new { @class = "form-control", @type = "text", @id = "txtApellido_Paterno2" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Apellido_Materno2</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_Materno2Filter, filters, new { @class = "form-control", @id = "ddlApellido_Materno2Filter" })
                    @Html.TextBoxFor(m => m.Apellido_Materno2, new { @class = "form-control", @type = "text", @id = "txtApellido_Materno2" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Nombre_Completo2</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_Completo2Filter, filters, new { @class = "form-control", @id = "ddlNombre_Completo2Filter" })
                    @Html.TextBoxFor(m => m.Nombre_Completo2, new { @class = "form-control", @type = "text", @id = "txtNombre_Completo2" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Sexo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.SexoFilter, filters, new { @class = "form-control", @id = "ddlSexoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceSexo, new { @class = "form-control", @type = "text", @id = "txtAdvanceSexo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varGenero_Sexo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceSexoMultiple, varGenero_Sexo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceSexo"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_de_Persona_MoralResources.Nacionalidad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NacionalidadFilter, filters, new { @class = "form-control", @id = "ddlNacionalidadFilter" })
                    @Html.TextBoxFor(m => m.AdvanceNacionalidad, new { @class = "form-control", @type = "text", @id = "txtAdvanceNacionalidad" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varNacionalidad_Nacionalidad!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceNacionalidadMultiple, varNacionalidad_Nacionalidad,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceNacionalidad"
                        });
                    }
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Detalle_de_Persona_Moral/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.Detalle_de_Persona_MoralClaveTo = $("#txtAdvanceToClave").val();
        }
        advanceSearch.Modulo_Atencion_InicialSearchType = 0;
        if ($('#ddlAdvanceModulo_Atencion_Inicial').val().length > 0 || $("#txtAdvanceModulo_Atencion_Inicial").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.Modulo_Atencion_InicialName = $("#txtAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialNameSearchType = $("#ddlAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialSearchType = 1;
            }
            else {

                advanceSearch.Modulo_Atencion_InicialToSearch = $("#ddlAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialSearchType = 2;
            }
        }
        advanceSearch.Expediente_MPSearchType = 0;
        if ($('#ddlAdvanceExpediente_MP').val().length > 0 || $("#txtAdvanceExpediente_MP").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.Expediente_MPName = $("#txtAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPNameSearchType = $("#ddlAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPSearchType = 1;
            }
            else {

                advanceSearch.Expediente_MPToSearch = $("#ddlAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPSearchType = 2;
            }
        }
        if ($("#txtAdvanceNombre").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNombre = $("#txtAdvanceNombre").val();
            advanceSearch.Detalle_de_Persona_MoralNombreSearchType = $("#ddlAdvanceNombreFilter").val();
        }
        if ($("#txtAdvanceApellido_Paterno").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralApellido_Paterno = $("#txtAdvanceApellido_Paterno").val();
            advanceSearch.Detalle_de_Persona_MoralApellido_PaternoSearchType = $("#ddlAdvanceApellido_PaternoFilter").val();
        }
        if ($("#txtAdvanceApellido_Materno").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralApellido_Materno = $("#txtAdvanceApellido_Materno").val();
            advanceSearch.Detalle_de_Persona_MoralApellido_MaternoSearchType = $("#ddlAdvanceApellido_MaternoFilter").val();
        }
        if ($("#txtAdvanceNombre_Completo").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNombre_Completo = $("#txtAdvanceNombre_Completo").val();
            advanceSearch.Detalle_de_Persona_MoralNombre_CompletoSearchType = $("#ddlAdvanceNombre_CompletoFilter").val();
        }
        if ($("#txtAdvanceCalidad_Juridica").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCalidad_Juridica = $("#txtAdvanceCalidad_Juridica").val();
            advanceSearch.Detalle_de_Persona_MoralCalidad_JuridicaSearchType = $("#ddlAdvanceCalidad_JuridicaFilter").val();
        }
        if ($("#txtAdvanceRazon_Social").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralRazon_Social = $("#txtAdvanceRazon_Social").val();
            advanceSearch.Detalle_de_Persona_MoralRazon_SocialSearchType = $("#ddlAdvanceRazon_SocialFilter").val();
        }
        advanceSearch.PaisSearchType = 0;
        if ($('#ddlAdvancePais').val().length > 0 || $("#txtAdvancePais").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.PaisName = $("#txtAdvancePais").val();
                advanceSearch.PaisNameSearchType = $("#ddlAdvancePais").val();
                advanceSearch.PaisSearchType = 1;
            }
            else {

                advanceSearch.PaisToSearch = $("#ddlAdvancePais").val();
                advanceSearch.PaisSearchType = 2;
            }
        }
        advanceSearch.EstadoSearchType = 0;
        if ($('#ddlAdvanceEstado').val().length > 0 || $("#txtAdvanceEstado").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.EstadoName = $("#txtAdvanceEstado").val();
                advanceSearch.EstadoNameSearchType = $("#ddlAdvanceEstado").val();
                advanceSearch.EstadoSearchType = 1;
            }
            else {

                advanceSearch.EstadoToSearch = $("#ddlAdvanceEstado").val();
                advanceSearch.EstadoSearchType = 2;
            }
        }
        advanceSearch.MunicipioSearchType = 0;
        if ($('#ddlAdvanceMunicipio').val().length > 0 || $("#txtAdvanceMunicipio").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.MunicipioName = $("#txtAdvanceMunicipio").val();
                advanceSearch.MunicipioNameSearchType = $("#ddlAdvanceMunicipio").val();
                advanceSearch.MunicipioSearchType = 1;
            }
            else {

                advanceSearch.MunicipioToSearch = $("#ddlAdvanceMunicipio").val();
                advanceSearch.MunicipioSearchType = 2;
            }
        }
        advanceSearch.PoblacionSearchType = 0;
        if ($('#ddlAdvancePoblacion').val().length > 0 || $("#txtAdvancePoblacion").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.PoblacionName = $("#txtAdvancePoblacion").val();
                advanceSearch.PoblacionNameSearchType = $("#ddlAdvancePoblacion").val();
                advanceSearch.PoblacionSearchType = 1;
            }
            else {

                advanceSearch.PoblacionToSearch = $("#ddlAdvancePoblacion").val();
                advanceSearch.PoblacionSearchType = 2;
            }
        }
        advanceSearch.LocalidadSearchType = 0;
        if ($('#ddlAdvanceLocalidad').val().length > 0 || $("#txtAdvanceLocalidad").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.LocalidadName = $("#txtAdvanceLocalidad").val();
                advanceSearch.LocalidadNameSearchType = $("#ddlAdvanceLocalidad").val();
                advanceSearch.LocalidadSearchType = 1;
            }
            else {

                advanceSearch.LocalidadToSearch = $("#ddlAdvanceLocalidad").val();
                advanceSearch.LocalidadSearchType = 2;
            }
        }
        advanceSearch.ColoniaSearchType = 0;
        if ($('#ddlAdvanceColonia').val().length > 0 || $("#txtAdvanceColonia").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.ColoniaName = $("#txtAdvanceColonia").val();
                advanceSearch.ColoniaNameSearchType = $("#ddlAdvanceColonia").val();
                advanceSearch.ColoniaSearchType = 1;
            }
            else {

                advanceSearch.ColoniaToSearch = $("#ddlAdvanceColonia").val();
                advanceSearch.ColoniaSearchType = 2;
            }
        }
        if ($("#txtAdvanceCalle").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCalle = $("#txtAdvanceCalle").val();
            advanceSearch.Detalle_de_Persona_MoralCalleSearchType = $("#ddlAdvanceCalleFilter").val();
        }
        if ($("#txtAdvanceNumero_Exterior").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNumero_Exterior = $("#txtAdvanceNumero_Exterior").val();
            advanceSearch.Detalle_de_Persona_MoralNumero_ExteriorSearchType = $("#ddlAdvanceNumero_ExteriorFilter").val();
        }
        if ($("#txtAdvanceNumero_Interior").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNumero_Interior = $("#txtAdvanceNumero_Interior").val();
            advanceSearch.Detalle_de_Persona_MoralNumero_InteriorSearchType = $("#ddlAdvanceNumero_InteriorFilter").val();
        }
        if ($("#txtAdvanceReferencia").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralReferencia = $("#txtAdvanceReferencia").val();
            advanceSearch.Detalle_de_Persona_MoralReferenciaSearchType = $("#ddlAdvanceReferenciaFilter").val();
        }
        if ($("#txtAdvanceLatitud").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralLatitud = $("#txtAdvanceLatitud").val();
            advanceSearch.Detalle_de_Persona_MoralLatitudSearchType = $("#ddlAdvanceLatitudFilter").val();
        }
        if ($("#txtAdvanceLongitud").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralLongitud = $("#txtAdvanceLongitud").val();
            advanceSearch.Detalle_de_Persona_MoralLongitudSearchType = $("#ddlAdvanceLongitudFilter").val();
        }
        if ($("#txtAdvanceTelefono").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralTelefono = $("#txtAdvanceTelefono").val();
            advanceSearch.Detalle_de_Persona_MoralTelefonoSearchType = $("#ddlAdvanceTelefonoFilter").val();
        }
        if ($("#txtAdvanceFromExtension").val() != "" || $("#txtAdvanceToExtension").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralExtensionFrom = $("#txtAdvanceFromExtension").val();
            advanceSearch.Detalle_de_Persona_MoralExtensionTo = $("#txtAdvanceToExtension").val();
        }
        if ($("#txtAdvanceCelular").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCelular = $("#txtAdvanceCelular").val();
            advanceSearch.Detalle_de_Persona_MoralCelularSearchType = $("#ddlAdvanceCelularFilter").val();
        }
        if ($("#txtAdvanceCorreo_Electronico").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCorreo_Electronico = $("#txtAdvanceCorreo_Electronico").val();
            advanceSearch.Detalle_de_Persona_MoralCorreo_ElectronicoSearchType = $("#ddlAdvanceCorreo_ElectronicoFilter").val();
        }
        if ($("#txtAdvanceFromCodigo_Postal").val() != "" || $("#txtAdvanceToCodigo_Postal").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCodigo_PostalFrom = $("#txtAdvanceFromCodigo_Postal").val();
            advanceSearch.Detalle_de_Persona_MoralCodigo_PostalTo = $("#txtAdvanceToCodigo_Postal").val();
        }
        if ($("#txtAdvanceRFC").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralRFC = $("#txtAdvanceRFC").val();
            advanceSearch.Detalle_de_Persona_MoralRFCSearchType = $("#ddlAdvanceRFCFilter").val();
        }
        if ($("#txtAdvanceCURP").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralCURP = $("#txtAdvanceCURP").val();
            advanceSearch.Detalle_de_Persona_MoralCURPSearchType = $("#ddlAdvanceCURPFilter").val();
        }
        if ($("#txtAdvanceID_Estado_Institucion").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralID_Estado_Institucion = $("#txtAdvanceID_Estado_Institucion").val();
            advanceSearch.Detalle_de_Persona_MoralID_Estado_InstitucionSearchType = $("#ddlAdvanceID_Estado_InstitucionFilter").val();
        }
        if ($("#txtAdvanceNombres").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNombres = $("#txtAdvanceNombres").val();
            advanceSearch.Detalle_de_Persona_MoralNombresSearchType = $("#ddlAdvanceNombresFilter").val();
        }
        if ($("#txtAdvanceApellido_Paterno2").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralApellido_Paterno2 = $("#txtAdvanceApellido_Paterno2").val();
            advanceSearch.Detalle_de_Persona_MoralApellido_Paterno2SearchType = $("#ddlAdvanceApellido_Paterno2Filter").val();
        }
        if ($("#txtAdvanceApellido_Materno2").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralApellido_Materno2 = $("#txtAdvanceApellido_Materno2").val();
            advanceSearch.Detalle_de_Persona_MoralApellido_Materno2SearchType = $("#ddlAdvanceApellido_Materno2Filter").val();
        }
        if ($("#txtAdvanceNombre_Completo2").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_de_Persona_MoralNombre_Completo2 = $("#txtAdvanceNombre_Completo2").val();
            advanceSearch.Detalle_de_Persona_MoralNombre_Completo2SearchType = $("#ddlAdvanceNombre_Completo2Filter").val();
        }
        advanceSearch.SexoSearchType = 0;
        if ($('#ddlAdvanceSexo').val().length > 0 || $("#txtAdvanceSexo").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.SexoName = $("#txtAdvanceSexo").val();
                advanceSearch.SexoNameSearchType = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 1;
            }
            else {

                advanceSearch.SexoToSearch = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 2;
            }
        }
        advanceSearch.NacionalidadSearchType = 0;
        if ($('#ddlAdvanceNacionalidad').val().length > 0 || $("#txtAdvanceNacionalidad").val() == "") {


            if (isDetalle_de_Persona_MoralTextSearch) {
                advanceSearch.NacionalidadName = $("#txtAdvanceNacionalidad").val();
                advanceSearch.NacionalidadNameSearchType = $("#ddlAdvanceNacionalidad").val();
                advanceSearch.NacionalidadSearchType = 1;
            }
            else {

                advanceSearch.NacionalidadToSearch = $("#ddlAdvanceNacionalidad").val();
                advanceSearch.NacionalidadSearchType = 2;
            }
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblDetalle_de_Persona_Moral').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isDetalle_de_Persona_MoralTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceModulo_Atencion_Inicial").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceModulo_Atencion_Inicial").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceModulo_Atencion_Inicial").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceModulo_Atencion_Inicial").val('');
        });
        $("#txtAdvanceExpediente_MP").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceExpediente_MP").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceExpediente_MP").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceExpediente_MP").val('');
        });
        $("#txtAdvancePais").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvancePais").val('').trigger("chosen:updated");
        });

        $("#ddlAdvancePais").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvancePais").val('');
        });
        $("#txtAdvanceEstado").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceEstado").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstado").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceEstado").val('');
        });
        $("#txtAdvanceMunicipio").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceMunicipio").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceMunicipio").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceMunicipio").val('');
        });
        $("#txtAdvancePoblacion").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvancePoblacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvancePoblacion").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvancePoblacion").val('');
        });
        $("#txtAdvanceLocalidad").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceLocalidad").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceLocalidad").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceLocalidad").val('');
        });
        $("#txtAdvanceColonia").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceColonia").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceColonia").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceColonia").val('');
        });
        $("#txtAdvanceSexo").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceSexo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceSexo").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceSexo").val('');
        });
        $("#txtAdvanceNacionalidad").keypress(function () {
            isDetalle_de_Persona_MoralTextSearch = true;
            $("#ddlAdvanceNacionalidad").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceNacionalidad").change(function () {
            isDetalle_de_Persona_MoralTextSearch = false;
            $("#txtAdvanceNacionalidad").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

