@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Encuesta1AdvanceSearchModel
@{
    List<SelectListItem> varEstatus_Modulo = null;
    if (ViewBag.Estatuss_Modulo != null)
    { varEstatus_Modulo = (List<SelectListItem>)ViewBag.Estatuss_Modulo; }
    List<SelectListItem> varCatalogo_Numero_de_Preguntas_Numero_de_Preguntas = null;
    if (ViewBag.Catalogo_Numero_de_Preguntass_Numero_de_Preguntas != null)
    { varCatalogo_Numero_de_Preguntas_Numero_de_Preguntas = (List<SelectListItem>)ViewBag.Catalogo_Numero_de_Preguntass_Numero_de_Preguntas; }
    List<SelectListItem> varCatalogo_Respuesta_Respuesta_1 = null;
    if (ViewBag.Catalogo_Respuestas_Respuesta_1 != null)
    { varCatalogo_Respuesta_Respuesta_1 = (List<SelectListItem>)ViewBag.Catalogo_Respuestas_Respuesta_1; }
    List<SelectListItem> varCatalogo_Respuesta_Respuesta_2 = null;
    if (ViewBag.Catalogo_Respuestas_Respuesta_2 != null)
    { varCatalogo_Respuesta_Respuesta_2 = (List<SelectListItem>)ViewBag.Catalogo_Respuestas_Respuesta_2; }
    List<SelectListItem> varCatalogo_Respuesta_Respuesta_3 = null;
    if (ViewBag.Catalogo_Respuestas_Respuesta_3 != null)
    { varCatalogo_Respuesta_Respuesta_3 = (List<SelectListItem>)ViewBag.Catalogo_Respuestas_Respuesta_3; }
    List<SelectListItem> varCatalogo_Respuesta_Respuesta_4 = null;
    if (ViewBag.Catalogo_Respuestas_Respuesta_4 != null)
    { varCatalogo_Respuesta_Respuesta_4 = (List<SelectListItem>)ViewBag.Catalogo_Respuestas_Respuesta_4; }
    List<SelectListItem> varCatalogo_Respuesta_Respuesta_5 = null;
    if (ViewBag.Catalogo_Respuestas_Respuesta_5 != null)
    { varCatalogo_Respuesta_Respuesta_5 = (List<SelectListItem>)ViewBag.Catalogo_Respuestas_Respuesta_5; }
    List<SelectListItem> varEstatus_Encuesta_Estatus = null;
    if (ViewBag.Estatus_Encuestas_Estatus != null)
    { varEstatus_Encuesta_Estatus = (List<SelectListItem>)ViewBag.Estatus_Encuestas_Estatus; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Encuesta1", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Encuesta1Resources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Folio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.FolioFilter, filters, new { @class = "form-control", @id = "ddlFolioFilter" })
                    @Html.TextBoxFor(m => m.Folio, new { @class = "form-control", @type = "text", @id = "txtFolio" })
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Encuesta1Resources.Fecha_Enviado</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_Enviado" name="FromFecha_Enviado" type="text" value="@Model.FromFecha_Enviado" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_Enviado" name="ToFecha_Enviado" type="text" value="@Model.ToFecha_Enviado" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Encuesta1Resources.Hora_Enviado</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_Enviado" name="FromHora_Enviado" type="text" value="@Model.FromHora_Enviado" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_Enviado" name="ToHora_Enviado" type="text" value="@Model.ToHora_Enviado" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Encuesta1Resources.Fecha_Respuesta</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_Respuesta" name="FromFecha_Respuesta" type="text" value="@Model.FromFecha_Respuesta" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_Respuesta" name="ToFecha_Respuesta" type="text" value="@Model.ToFecha_Respuesta" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Encuesta1Resources.Hora_Respuesta</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_Respuesta" name="FromHora_Respuesta" type="text" value="@Model.FromHora_Respuesta" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_Respuesta" name="ToHora_Respuesta" type="text" value="@Model.ToHora_Respuesta" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.NUAT</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NUATFilter, filters, new { @class = "form-control", @id = "ddlNUATFilter" })
                    @Html.TextBoxFor(m => m.NUAT, new { @class = "form-control", @type = "text", @id = "txtNUAT" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Modulo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ModuloFilter, filters, new { @class = "form-control", @id = "ddlModuloFilter" })
                    @Html.TextBoxFor(m => m.AdvanceModulo, new { @class = "form-control", @type = "text", @id = "txtAdvanceModulo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_Modulo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceModuloMultiple, varEstatus_Modulo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceModulo"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Numero_de_Preguntas</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_PreguntasFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_PreguntasFilter" })
                    @Html.TextBoxFor(m => m.AdvanceNumero_de_Preguntas, new { @class = "form-control", @type = "text", @id = "txtAdvanceNumero_de_Preguntas" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Numero_de_Preguntas_Numero_de_Preguntas!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceNumero_de_PreguntasMultiple, varCatalogo_Numero_de_Preguntas_Numero_de_Preguntas,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceNumero_de_Preguntas"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Pregunta1</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Pregunta1Filter, filters, new { @class = "form-control", @id = "ddlPregunta1Filter" })
                    @Html.TextBoxFor(m => m.Pregunta1, new { @class = "form-control", @type = "text", @id = "txtPregunta1" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Respuesta_1</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Respuesta_1Filter, filters, new { @class = "form-control", @id = "ddlRespuesta_1Filter" })
                    @Html.TextBoxFor(m => m.AdvanceRespuesta_1, new { @class = "form-control", @type = "text", @id = "txtAdvanceRespuesta_1" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Respuesta_Respuesta_1!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRespuesta_1Multiple, varCatalogo_Respuesta_Respuesta_1,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRespuesta_1"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Pregunta2</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Pregunta2Filter, filters, new { @class = "form-control", @id = "ddlPregunta2Filter" })
                    @Html.TextBoxFor(m => m.Pregunta2, new { @class = "form-control", @type = "text", @id = "txtPregunta2" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Respuesta_2</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Respuesta_2Filter, filters, new { @class = "form-control", @id = "ddlRespuesta_2Filter" })
                    @Html.TextBoxFor(m => m.AdvanceRespuesta_2, new { @class = "form-control", @type = "text", @id = "txtAdvanceRespuesta_2" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Respuesta_Respuesta_2!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRespuesta_2Multiple, varCatalogo_Respuesta_Respuesta_2,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRespuesta_2"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Pregunta3</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Pregunta3Filter, filters, new { @class = "form-control", @id = "ddlPregunta3Filter" })
                    @Html.TextBoxFor(m => m.Pregunta3, new { @class = "form-control", @type = "text", @id = "txtPregunta3" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Respuesta_3</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Respuesta_3Filter, filters, new { @class = "form-control", @id = "ddlRespuesta_3Filter" })
                    @Html.TextBoxFor(m => m.AdvanceRespuesta_3, new { @class = "form-control", @type = "text", @id = "txtAdvanceRespuesta_3" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Respuesta_Respuesta_3!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRespuesta_3Multiple, varCatalogo_Respuesta_Respuesta_3,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRespuesta_3"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Pregunta4</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Pregunta4Filter, filters, new { @class = "form-control", @id = "ddlPregunta4Filter" })
                    @Html.TextBoxFor(m => m.Pregunta4, new { @class = "form-control", @type = "text", @id = "txtPregunta4" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Respuesta_4</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Respuesta_4Filter, filters, new { @class = "form-control", @id = "ddlRespuesta_4Filter" })
                    @Html.TextBoxFor(m => m.AdvanceRespuesta_4, new { @class = "form-control", @type = "text", @id = "txtAdvanceRespuesta_4" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Respuesta_Respuesta_4!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRespuesta_4Multiple, varCatalogo_Respuesta_Respuesta_4,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRespuesta_4"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Pregunta5</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Pregunta5Filter, filters, new { @class = "form-control", @id = "ddlPregunta5Filter" })
                    @Html.TextBoxFor(m => m.Pregunta5, new { @class = "form-control", @type = "text", @id = "txtPregunta5" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Respuesta_5</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Respuesta_5Filter, filters, new { @class = "form-control", @id = "ddlRespuesta_5Filter" })
                    @Html.TextBoxFor(m => m.AdvanceRespuesta_5, new { @class = "form-control", @type = "text", @id = "txtAdvanceRespuesta_5" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varCatalogo_Respuesta_Respuesta_5!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRespuesta_5Multiple, varCatalogo_Respuesta_Respuesta_5,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRespuesta_5"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Encuesta1Resources.Estatus</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EstatusFilter, filters, new { @class = "form-control", @id = "ddlEstatusFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEstatus, new { @class = "form-control", @type = "text", @id = "txtAdvanceEstatus" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_Encuesta_Estatus!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEstatusMultiple, varEstatus_Encuesta_Estatus,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEstatus"
                        });
                    }
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Encuesta1/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1ClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.Encuesta1ClaveTo = $("#txtAdvanceToClave").val();
        }
        if ($("#txtAdvanceFolio").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Folio = $("#txtAdvanceFolio").val();
            advanceSearch.Encuesta1FolioSearchType = $("#ddlAdvanceFolioFilter").val();
        }
        if ($("#txtAdvanceFromFecha_Enviado").val() != "" || $("#txtAdvanceToFecha_Enviado").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Fecha_EnviadoFrom = $("#txtAdvanceFromFecha_Enviado").val();
            advanceSearch.Encuesta1Fecha_EnviadoTo = $("#txtAdvanceToFecha_Enviado").val();
        }
        if ($("#txtAdvanceHora_Enviado").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Hora_Enviado = $("#txtAdvanceHora_Enviado").val();
            advanceSearch.Encuesta1Hora_EnviadoSearchType = $("#ddlAdvanceHora_EnviadoFilter").val();
        }
        if ($("#txtAdvanceFromFecha_Respuesta").val() != "" || $("#txtAdvanceToFecha_Respuesta").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Fecha_RespuestaFrom = $("#txtAdvanceFromFecha_Respuesta").val();
            advanceSearch.Encuesta1Fecha_RespuestaTo = $("#txtAdvanceToFecha_Respuesta").val();
        }
        if ($("#txtAdvanceHora_Respuesta").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Hora_Respuesta = $("#txtAdvanceHora_Respuesta").val();
            advanceSearch.Encuesta1Hora_RespuestaSearchType = $("#ddlAdvanceHora_RespuestaFilter").val();
        }
        if ($("#txtAdvanceNUAT").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1NUAT = $("#txtAdvanceNUAT").val();
            advanceSearch.Encuesta1NUATSearchType = $("#ddlAdvanceNUATFilter").val();
        }
        advanceSearch.ModuloSearchType = 0;
        if ($('#ddlAdvanceModulo').val().length > 0 || $("#txtAdvanceModulo").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.ModuloName = $("#txtAdvanceModulo").val();
                advanceSearch.ModuloNameSearchType = $("#ddlAdvanceModulo").val();
                advanceSearch.ModuloSearchType = 1;
            }
            else {

                advanceSearch.ModuloToSearch = $("#ddlAdvanceModulo").val();
                advanceSearch.ModuloSearchType = 2;
            }
        }
        advanceSearch.Numero_de_PreguntasSearchType = 0;
        if ($('#ddlAdvanceNumero_de_Preguntas').val().length > 0 || $("#txtAdvanceNumero_de_Preguntas").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Numero_de_PreguntasName = $("#txtAdvanceNumero_de_Preguntas").val();
                advanceSearch.Numero_de_PreguntasNameSearchType = $("#ddlAdvanceNumero_de_Preguntas").val();
                advanceSearch.Numero_de_PreguntasSearchType = 1;
            }
            else {

                advanceSearch.Numero_de_PreguntasToSearch = $("#ddlAdvanceNumero_de_Preguntas").val();
                advanceSearch.Numero_de_PreguntasSearchType = 2;
            }
        }
        if ($("#txtAdvancePregunta1").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Pregunta1 = $("#txtAdvancePregunta1").val();
            advanceSearch.Encuesta1Pregunta1SearchType = $("#ddlAdvancePregunta1Filter").val();
        }
        advanceSearch.Respuesta_1SearchType = 0;
        if ($('#ddlAdvanceRespuesta_1').val().length > 0 || $("#txtAdvanceRespuesta_1").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Respuesta_1Name = $("#txtAdvanceRespuesta_1").val();
                advanceSearch.Respuesta_1NameSearchType = $("#ddlAdvanceRespuesta_1").val();
                advanceSearch.Respuesta_1SearchType = 1;
            }
            else {

                advanceSearch.Respuesta_1ToSearch = $("#ddlAdvanceRespuesta_1").val();
                advanceSearch.Respuesta_1SearchType = 2;
            }
        }
        if ($("#txtAdvancePregunta2").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Pregunta2 = $("#txtAdvancePregunta2").val();
            advanceSearch.Encuesta1Pregunta2SearchType = $("#ddlAdvancePregunta2Filter").val();
        }
        advanceSearch.Respuesta_2SearchType = 0;
        if ($('#ddlAdvanceRespuesta_2').val().length > 0 || $("#txtAdvanceRespuesta_2").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Respuesta_2Name = $("#txtAdvanceRespuesta_2").val();
                advanceSearch.Respuesta_2NameSearchType = $("#ddlAdvanceRespuesta_2").val();
                advanceSearch.Respuesta_2SearchType = 1;
            }
            else {

                advanceSearch.Respuesta_2ToSearch = $("#ddlAdvanceRespuesta_2").val();
                advanceSearch.Respuesta_2SearchType = 2;
            }
        }
        if ($("#txtAdvancePregunta3").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Pregunta3 = $("#txtAdvancePregunta3").val();
            advanceSearch.Encuesta1Pregunta3SearchType = $("#ddlAdvancePregunta3Filter").val();
        }
        advanceSearch.Respuesta_3SearchType = 0;
        if ($('#ddlAdvanceRespuesta_3').val().length > 0 || $("#txtAdvanceRespuesta_3").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Respuesta_3Name = $("#txtAdvanceRespuesta_3").val();
                advanceSearch.Respuesta_3NameSearchType = $("#ddlAdvanceRespuesta_3").val();
                advanceSearch.Respuesta_3SearchType = 1;
            }
            else {

                advanceSearch.Respuesta_3ToSearch = $("#ddlAdvanceRespuesta_3").val();
                advanceSearch.Respuesta_3SearchType = 2;
            }
        }
        if ($("#txtAdvancePregunta4").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Pregunta4 = $("#txtAdvancePregunta4").val();
            advanceSearch.Encuesta1Pregunta4SearchType = $("#ddlAdvancePregunta4Filter").val();
        }
        advanceSearch.Respuesta_4SearchType = 0;
        if ($('#ddlAdvanceRespuesta_4').val().length > 0 || $("#txtAdvanceRespuesta_4").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Respuesta_4Name = $("#txtAdvanceRespuesta_4").val();
                advanceSearch.Respuesta_4NameSearchType = $("#ddlAdvanceRespuesta_4").val();
                advanceSearch.Respuesta_4SearchType = 1;
            }
            else {

                advanceSearch.Respuesta_4ToSearch = $("#ddlAdvanceRespuesta_4").val();
                advanceSearch.Respuesta_4SearchType = 2;
            }
        }
        if ($("#txtAdvancePregunta5").val() != "") {
            hasParameter = true;
            advanceSearch.Encuesta1Pregunta5 = $("#txtAdvancePregunta5").val();
            advanceSearch.Encuesta1Pregunta5SearchType = $("#ddlAdvancePregunta5Filter").val();
        }
        advanceSearch.Respuesta_5SearchType = 0;
        if ($('#ddlAdvanceRespuesta_5').val().length > 0 || $("#txtAdvanceRespuesta_5").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.Respuesta_5Name = $("#txtAdvanceRespuesta_5").val();
                advanceSearch.Respuesta_5NameSearchType = $("#ddlAdvanceRespuesta_5").val();
                advanceSearch.Respuesta_5SearchType = 1;
            }
            else {

                advanceSearch.Respuesta_5ToSearch = $("#ddlAdvanceRespuesta_5").val();
                advanceSearch.Respuesta_5SearchType = 2;
            }
        }
        advanceSearch.EstatusSearchType = 0;
        if ($('#ddlAdvanceEstatus').val().length > 0 || $("#txtAdvanceEstatus").val() == "") {


            if (isEncuesta1TextSearch) {
                advanceSearch.EstatusName = $("#txtAdvanceEstatus").val();
                advanceSearch.EstatusNameSearchType = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 1;
            }
            else {

                advanceSearch.EstatusToSearch = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 2;
            }
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblEncuesta1').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isEncuesta1TextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceModulo").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceModulo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceModulo").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceModulo").val('');
        });
        $("#txtAdvanceNumero_de_Preguntas").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceNumero_de_Preguntas").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceNumero_de_Preguntas").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceNumero_de_Preguntas").val('');
        });
        $("#txtAdvanceRespuesta_1").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceRespuesta_1").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRespuesta_1").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceRespuesta_1").val('');
        });
        $("#txtAdvanceRespuesta_2").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceRespuesta_2").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRespuesta_2").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceRespuesta_2").val('');
        });
        $("#txtAdvanceRespuesta_3").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceRespuesta_3").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRespuesta_3").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceRespuesta_3").val('');
        });
        $("#txtAdvanceRespuesta_4").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceRespuesta_4").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRespuesta_4").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceRespuesta_4").val('');
        });
        $("#txtAdvanceRespuesta_5").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceRespuesta_5").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRespuesta_5").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceRespuesta_5").val('');
        });
        $("#txtAdvanceEstatus").keypress(function () {
            isEncuesta1TextSearch = true;
            $("#ddlAdvanceEstatus").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstatus").change(function () {
            isEncuesta1TextSearch = false;
            $("#txtAdvanceEstatus").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

