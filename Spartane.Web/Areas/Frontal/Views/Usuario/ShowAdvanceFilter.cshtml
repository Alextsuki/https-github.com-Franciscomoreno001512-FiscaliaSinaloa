@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.UsuarioAdvanceSearchModel
@{
 List<SelectListItem> varSpartan_User_Nombre = null;
    if (ViewBag.Spartan_Users_Nombre != null)
    { varSpartan_User_Nombre = (List<SelectListItem>)ViewBag.Spartan_Users_Nombre; }
    List<SelectListItem> varDelegacion_Delegacion = null;
    if (ViewBag.Delegacions_Delegacion != null)
    { varDelegacion_Delegacion = (List<SelectListItem>)ViewBag.Delegacions_Delegacion; }
    List<SelectListItem> varAgencia_Agencia = null;
    if (ViewBag.Agencias_Agencia != null)
    { varAgencia_Agencia = (List<SelectListItem>)ViewBag.Agencias_Agencia; }
    List<SelectListItem> varEspecialidad_MP_Especialidad = null;
    if (ViewBag.Especialidad_MPs_Especialidad != null)
    { varEspecialidad_MP_Especialidad = (List<SelectListItem>)ViewBag.Especialidad_MPs_Especialidad; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Usuario", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.UsuarioResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
 List<SelectListItem> varSpartan_User_Nombre = null;
    if (ViewBag.Spartan_Users_Nombre != null)
    { varSpartan_User_Nombre = (List<SelectListItem>)ViewBag.Spartan_Users_Nombre; }
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Clave_de_Acceso</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Clave_de_AccesoFilter, filters, new { @class = "form-control", @id = "ddlClave_de_AccesoFilter" })
                    @Html.TextBoxFor(m => m.Clave_de_Acceso, new { @class = "form-control", @type = "text", @id = "txtClave_de_Acceso" })
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.UsuarioResources.Grupo_de_Usuario</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromGrupo_de_Usuario, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromGrupo_de_Usuario" })
                    @Html.ValidationMessageFor(m => m.FromGrupo_de_Usuario)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToGrupo_de_Usuario, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToGrupo_de_Usuario", @data_min = "txtAdvanceFromGrupo_de_Usuario" })
                    @Html.ValidationMessageFor(m => m.ToGrupo_de_Usuario)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Numero_de_Empleado</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_EmpleadoFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_EmpleadoFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Empleado, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Empleado" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Correo_Institucional</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Correo_InstitucionalFilter, filters, new { @class = "form-control", @id = "ddlCorreo_InstitucionalFilter" })
                    @Html.TextBoxFor(m => m.Correo_Institucional, new { @class = "form-control", @type = "text", @id = "txtCorreo_Institucional" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.CUIP</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.CUIPFilter, filters, new { @class = "form-control", @id = "ddlCUIPFilter" })
                    @Html.TextBoxFor(m => m.CUIP, new { @class = "form-control", @type = "text", @id = "txtCUIP" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Delegacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DelegacionFilter, filters, new { @class = "form-control", @id = "ddlDelegacionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceDelegacion, new { @class = "form-control", @type = "text", @id = "txtAdvanceDelegacion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varDelegacion_Delegacion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceDelegacionMultiple, varDelegacion_Delegacion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceDelegacion"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.UsuarioResources.Carga_de_Trabajo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromCarga_de_Trabajo, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromCarga_de_Trabajo" })
                    @Html.ValidationMessageFor(m => m.FromCarga_de_Trabajo)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToCarga_de_Trabajo, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToCarga_de_Trabajo", @data_min = "txtAdvanceFromCarga_de_Trabajo" })
                    @Html.ValidationMessageFor(m => m.ToCarga_de_Trabajo)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Nombre_Remitente</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_RemitenteFilter, filters, new { @class = "form-control", @id = "ddlNombre_RemitenteFilter" })
                    @Html.TextBoxFor(m => m.Nombre_Remitente, new { @class = "form-control", @type = "text", @id = "txtNombre_Remitente" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Apellido_Paterno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_PaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_PaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Paterno, new { @class = "form-control", @type = "text", @id = "txtApellido_Paterno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Apellido_Materno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_MaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_MaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Materno, new { @class = "form-control", @type = "text", @id = "txtApellido_Materno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Agencia</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.AgenciaFilter, filters, new { @class = "form-control", @id = "ddlAgenciaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceAgencia, new { @class = "form-control", @type = "text", @id = "txtAdvanceAgencia" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varAgencia_Agencia!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceAgenciaMultiple, varAgencia_Agencia,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceAgencia"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Especialidad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EspecialidadFilter, filters, new { @class = "form-control", @id = "ddlEspecialidadFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEspecialidad, new { @class = "form-control", @type = "text", @id = "txtAdvanceEspecialidad" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEspecialidad_MP_Especialidad!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEspecialidadMultiple, varEspecialidad_MP_Especialidad,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEspecialidad"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.ID_de_Dispositivo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ID_de_DispositivoFilter, filters, new { @class = "form-control", @id = "ddlID_de_DispositivoFilter" })
                    @Html.TextBoxFor(m => m.ID_de_Dispositivo, new { @class = "form-control", @type = "text", @id = "txtID_de_Dispositivo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.ID_de_Huella</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ID_de_HuellaFilter, filters, new { @class = "form-control", @id = "ddlID_de_HuellaFilter" })
                    @Html.TextBoxFor(m => m.ID_de_Huella, new { @class = "form-control", @type = "text", @id = "txtID_de_Huella" })
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.UsuarioResources.Fotografia</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFotografia, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFotografia" })
                    @Html.ValidationMessageFor(m => m.FromFotografia)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFotografia, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFotografia", @data_min = "txtAdvanceFromFotografia" })
                    @Html.ValidationMessageFor(m => m.ToFotografia)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.UsuarioResources.Usuario_que_Registra</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromUsuario_que_Registra, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromUsuario_que_Registra" })
                    @Html.ValidationMessageFor(m => m.FromUsuario_que_Registra)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToUsuario_que_Registra, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToUsuario_que_Registra", @data_min = "txtAdvanceFromUsuario_que_Registra" })
                    @Html.ValidationMessageFor(m => m.ToUsuario_que_Registra)
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.UsuarioResources.Fecha_de_Registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Registro" name="FromFecha_de_Registro" type="text" value="@Model.FromFecha_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Registro" name="ToFecha_de_Registro" type="text" value="@Model.ToFecha_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.UsuarioResources.Hora_de_Registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Registro" name="FromHora_de_Registro" type="text" value="@Model.FromHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Registro" name="ToHora_de_Registro" type="text" value="@Model.ToHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.UsuarioResources.Estatus_de_Registro</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Estatus_de_RegistroFilter, filters, new { @class = "form-control", @id = "ddlEstatus_de_RegistroFilter" })
                    @Html.TextBoxFor(m => m.Estatus_de_Registro, new { @class = "form-control", @type = "text", @id = "txtEstatus_de_Registro" })
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Usuario/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.UsuarioClaveTo = $("#txtAdvanceToClave").val();
        }
        advanceSearch.NombreSearchType = 0;
        if ($('#ddlAdvanceNombre').val().length > 0 || $("#txtAdvanceNombre").val() == "") {


            if (isUsuarioTextSearch) {
                advanceSearch.NombreName = $("#txtAdvanceNombre").val();
                advanceSearch.NombreNameSearchType = $("#ddlAdvanceNombre").val();
                advanceSearch.NombreSearchType = 1;
            }
            else {

                advanceSearch.NombreToSearch = $("#ddlAdvanceNombre").val();
                advanceSearch.NombreSearchType = 2;
            }
        }
        if ($("#txtAdvanceClave_de_Acceso").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioClave_de_Acceso = $("#txtAdvanceClave_de_Acceso").val();
            advanceSearch.UsuarioClave_de_AccesoSearchType = $("#ddlAdvanceClave_de_AccesoFilter").val();
        }
        if ($("#txtAdvanceFromGrupo_de_Usuario").val() != "" || $("#txtAdvanceToGrupo_de_Usuario").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioGrupo_de_UsuarioFrom = $("#txtAdvanceFromGrupo_de_Usuario").val();
            advanceSearch.UsuarioGrupo_de_UsuarioTo = $("#txtAdvanceToGrupo_de_Usuario").val();
        }
        if ($("#txtAdvanceNumero_de_Empleado").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioNumero_de_Empleado = $("#txtAdvanceNumero_de_Empleado").val();
            advanceSearch.UsuarioNumero_de_EmpleadoSearchType = $("#ddlAdvanceNumero_de_EmpleadoFilter").val();
        }
        if ($("#txtAdvanceCorreo_Institucional").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioCorreo_Institucional = $("#txtAdvanceCorreo_Institucional").val();
            advanceSearch.UsuarioCorreo_InstitucionalSearchType = $("#ddlAdvanceCorreo_InstitucionalFilter").val();
        }
        if ($("#txtAdvanceCUIP").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioCUIP = $("#txtAdvanceCUIP").val();
            advanceSearch.UsuarioCUIPSearchType = $("#ddlAdvanceCUIPFilter").val();
        }
        advanceSearch.DelegacionSearchType = 0;
        if ($('#ddlAdvanceDelegacion').val().length > 0 || $("#txtAdvanceDelegacion").val() == "") {


            if (isUsuarioTextSearch) {
                advanceSearch.DelegacionName = $("#txtAdvanceDelegacion").val();
                advanceSearch.DelegacionNameSearchType = $("#ddlAdvanceDelegacion").val();
                advanceSearch.DelegacionSearchType = 1;
            }
            else {

                advanceSearch.DelegacionToSearch = $("#ddlAdvanceDelegacion").val();
                advanceSearch.DelegacionSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromCarga_de_Trabajo").val() != "" || $("#txtAdvanceToCarga_de_Trabajo").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioCarga_de_TrabajoFrom = $("#txtAdvanceFromCarga_de_Trabajo").val();
            advanceSearch.UsuarioCarga_de_TrabajoTo = $("#txtAdvanceToCarga_de_Trabajo").val();
        }
        if ($("#txtAdvanceNombre_Remitente").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioNombre_Remitente = $("#txtAdvanceNombre_Remitente").val();
            advanceSearch.UsuarioNombre_RemitenteSearchType = $("#ddlAdvanceNombre_RemitenteFilter").val();
        }
        if ($("#txtAdvanceApellido_Paterno").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioApellido_Paterno = $("#txtAdvanceApellido_Paterno").val();
            advanceSearch.UsuarioApellido_PaternoSearchType = $("#ddlAdvanceApellido_PaternoFilter").val();
        }
        if ($("#txtAdvanceApellido_Materno").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioApellido_Materno = $("#txtAdvanceApellido_Materno").val();
            advanceSearch.UsuarioApellido_MaternoSearchType = $("#ddlAdvanceApellido_MaternoFilter").val();
        }
        advanceSearch.AgenciaSearchType = 0;
        if ($('#ddlAdvanceAgencia').val().length > 0 || $("#txtAdvanceAgencia").val() == "") {


            if (isUsuarioTextSearch) {
                advanceSearch.AgenciaName = $("#txtAdvanceAgencia").val();
                advanceSearch.AgenciaNameSearchType = $("#ddlAdvanceAgencia").val();
                advanceSearch.AgenciaSearchType = 1;
            }
            else {

                advanceSearch.AgenciaToSearch = $("#ddlAdvanceAgencia").val();
                advanceSearch.AgenciaSearchType = 2;
            }
        }
        advanceSearch.EspecialidadSearchType = 0;
        if ($('#ddlAdvanceEspecialidad').val().length > 0 || $("#txtAdvanceEspecialidad").val() == "") {


            if (isUsuarioTextSearch) {
                advanceSearch.EspecialidadName = $("#txtAdvanceEspecialidad").val();
                advanceSearch.EspecialidadNameSearchType = $("#ddlAdvanceEspecialidad").val();
                advanceSearch.EspecialidadSearchType = 1;
            }
            else {

                advanceSearch.EspecialidadToSearch = $("#ddlAdvanceEspecialidad").val();
                advanceSearch.EspecialidadSearchType = 2;
            }
        }
        if ($("#txtAdvanceID_de_Dispositivo").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioID_de_Dispositivo = $("#txtAdvanceID_de_Dispositivo").val();
            advanceSearch.UsuarioID_de_DispositivoSearchType = $("#ddlAdvanceID_de_DispositivoFilter").val();
        }
        if ($("#txtAdvanceID_de_Huella").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioID_de_Huella = $("#txtAdvanceID_de_Huella").val();
            advanceSearch.UsuarioID_de_HuellaSearchType = $("#ddlAdvanceID_de_HuellaFilter").val();
        }
        if ($("#txtAdvanceFromFotografia").val() != "" || $("#txtAdvanceToFotografia").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioFotografiaFrom = $("#txtAdvanceFromFotografia").val();
            advanceSearch.UsuarioFotografiaTo = $("#txtAdvanceToFotografia").val();
        }
        if ($("#txtAdvanceFromUsuario_que_Registra").val() != "" || $("#txtAdvanceToUsuario_que_Registra").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioUsuario_que_RegistraFrom = $("#txtAdvanceFromUsuario_que_Registra").val();
            advanceSearch.UsuarioUsuario_que_RegistraTo = $("#txtAdvanceToUsuario_que_Registra").val();
        }
        if ($("#txtAdvanceFromFecha_de_Registro").val() != "" || $("#txtAdvanceToFecha_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioFecha_de_RegistroFrom = $("#txtAdvanceFromFecha_de_Registro").val();
            advanceSearch.UsuarioFecha_de_RegistroTo = $("#txtAdvanceToFecha_de_Registro").val();
        }
        if ($("#txtAdvanceHora_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioHora_de_Registro = $("#txtAdvanceHora_de_Registro").val();
            advanceSearch.UsuarioHora_de_RegistroSearchType = $("#ddlAdvanceHora_de_RegistroFilter").val();
        }
        if ($("#txtAdvanceEstatus_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.UsuarioEstatus_de_Registro = $("#txtAdvanceEstatus_de_Registro").val();
            advanceSearch.UsuarioEstatus_de_RegistroSearchType = $("#ddlAdvanceEstatus_de_RegistroFilter").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblUsuario').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isUsuarioTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceNombre").keypress(function () {
            isUsuarioTextSearch = true;
            $("#ddlAdvanceNombre").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceNombre").change(function () {
            isUsuarioTextSearch = false;
            $("#txtAdvanceNombre").val('');
        });
        $("#txtAdvanceDelegacion").keypress(function () {
            isUsuarioTextSearch = true;
            $("#ddlAdvanceDelegacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceDelegacion").change(function () {
            isUsuarioTextSearch = false;
            $("#txtAdvanceDelegacion").val('');
        });
        $("#txtAdvanceAgencia").keypress(function () {
            isUsuarioTextSearch = true;
            $("#ddlAdvanceAgencia").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceAgencia").change(function () {
            isUsuarioTextSearch = false;
            $("#txtAdvanceAgencia").val('');
        });
        $("#txtAdvanceEspecialidad").keypress(function () {
            isUsuarioTextSearch = true;
            $("#ddlAdvanceEspecialidad").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEspecialidad").change(function () {
            isUsuarioTextSearch = false;
            $("#txtAdvanceEspecialidad").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

